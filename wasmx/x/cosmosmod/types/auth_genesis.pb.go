// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mythos/cosmosmod/v1/auth_genesis.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	types1 "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	types "github.com/cosmos/cosmos-sdk/x/auth/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// BankGenesisState defines the bank module's genesis state.
type AuthGenesisState struct {
	// params defines all the parameters of the module.
	Params types.Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
	// accounts are the accounts present at genesis.
	Accounts             []*types1.Any `protobuf:"bytes,2,rep,name=accounts,proto3" json:"accounts,omitempty"`
	BaseAccountTypeurl   string        `protobuf:"bytes,3,opt,name=base_account_typeurl,json=baseAccountTypeurl,proto3" json:"base_account_typeurl,omitempty"`
	ModuleAccountTypeurl string        `protobuf:"bytes,4,opt,name=module_account_typeurl,json=moduleAccountTypeurl,proto3" json:"module_account_typeurl,omitempty"`
}

func (m *AuthGenesisState) Reset()         { *m = AuthGenesisState{} }
func (m *AuthGenesisState) String() string { return proto.CompactTextString(m) }
func (*AuthGenesisState) ProtoMessage()    {}
func (*AuthGenesisState) Descriptor() ([]byte, []int) {
	return fileDescriptor_e5e5d45de62d09a8, []int{0}
}
func (m *AuthGenesisState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthGenesisState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthGenesisState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthGenesisState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthGenesisState.Merge(m, src)
}
func (m *AuthGenesisState) XXX_Size() int {
	return m.Size()
}
func (m *AuthGenesisState) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthGenesisState.DiscardUnknown(m)
}

var xxx_messageInfo_AuthGenesisState proto.InternalMessageInfo

func (m *AuthGenesisState) GetParams() types.Params {
	if m != nil {
		return m.Params
	}
	return types.Params{}
}

func (m *AuthGenesisState) GetAccounts() []*types1.Any {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *AuthGenesisState) GetBaseAccountTypeurl() string {
	if m != nil {
		return m.BaseAccountTypeurl
	}
	return ""
}

func (m *AuthGenesisState) GetModuleAccountTypeurl() string {
	if m != nil {
		return m.ModuleAccountTypeurl
	}
	return ""
}

func init() {
	proto.RegisterType((*AuthGenesisState)(nil), "mythos.cosmosmod.v1.AuthGenesisState")
}

func init() {
	proto.RegisterFile("mythos/cosmosmod/v1/auth_genesis.proto", fileDescriptor_e5e5d45de62d09a8)
}

var fileDescriptor_e5e5d45de62d09a8 = []byte{
	// 363 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x3f, 0x4f, 0xc2, 0x40,
	0x18, 0xc6, 0x7b, 0x62, 0x88, 0x94, 0x45, 0x6b, 0x63, 0x10, 0x93, 0x13, 0x1d, 0x0c, 0x71, 0xb8,
	0x03, 0x74, 0x36, 0x81, 0xc5, 0xc5, 0xc1, 0xa0, 0x93, 0x4b, 0x73, 0x2d, 0x67, 0xdb, 0xa4, 0xed,
	0x91, 0xde, 0x1d, 0xd2, 0x6f, 0xe1, 0xc7, 0x70, 0xf4, 0x63, 0x30, 0x32, 0x3a, 0x19, 0x03, 0x83,
	0x8b, 0x1f, 0xc2, 0xf4, 0xee, 0x20, 0x12, 0x35, 0x69, 0x9a, 0x7b, 0xdf, 0xdf, 0xf3, 0xbc, 0xff,
	0xec, 0xb3, 0xb4, 0x10, 0x11, 0xe3, 0x38, 0x60, 0x3c, 0x2d, 0xbf, 0x11, 0x9e, 0x74, 0x31, 0x91,
	0x22, 0xf2, 0x42, 0x9a, 0x51, 0x1e, 0x73, 0x34, 0xce, 0x99, 0x60, 0xce, 0xbe, 0xd6, 0xa1, 0xb5,
	0x0e, 0x4d, 0xba, 0x4d, 0x37, 0x64, 0x21, 0x53, 0x1c, 0x97, 0x2f, 0x2d, 0x6d, 0xee, 0x91, 0x34,
	0xce, 0x18, 0x56, 0x7f, 0x93, 0x3a, 0x0c, 0x19, 0x0b, 0x13, 0x8a, 0x55, 0xe4, 0xcb, 0x47, 0x4c,
	0xb2, 0x62, 0x85, 0x74, 0x45, 0x4f, 0x97, 0xd1, 0x81, 0x41, 0x50, 0x47, 0x6a, 0x1c, 0x3c, 0xe9,
	0xfa, 0x54, 0x10, 0x3d, 0x9b, 0xe1, 0x27, 0x7f, 0xf1, 0x8d, 0xb1, 0x9b, 0xf0, 0xbf, 0xf5, 0x34,
	0x3f, 0xfd, 0x02, 0xf6, 0x6e, 0x5f, 0x8a, 0xe8, 0x5a, 0xbb, 0xee, 0x04, 0x11, 0xd4, 0xb9, 0xb2,
	0xab, 0x63, 0x92, 0x93, 0x94, 0x37, 0x40, 0x0b, 0xb4, 0xeb, 0xbd, 0x23, 0xb3, 0x35, 0x52, 0x46,
	0xd3, 0x08, 0xdd, 0x2a, 0xc9, 0xa0, 0x36, 0x7b, 0x3f, 0xb6, 0x5e, 0x3e, 0x5f, 0xcf, 0xc1, 0xd0,
	0xb8, 0x9c, 0x8e, 0xbd, 0x43, 0x82, 0x80, 0xc9, 0x4c, 0xf0, 0xc6, 0x56, 0xab, 0xd2, 0xae, 0xf7,
	0x5c, 0xa4, 0x0f, 0x80, 0x56, 0x07, 0x40, 0xfd, 0xac, 0x18, 0xae, 0x55, 0x4e, 0xc7, 0x76, 0x7d,
	0xc2, 0xa9, 0x67, 0x12, 0x9e, 0x28, 0xc6, 0x54, 0xe6, 0x49, 0xa3, 0xd2, 0x02, 0xed, 0xda, 0xd0,
	0x29, 0x59, 0x5f, 0xa3, 0x7b, 0x4d, 0x9c, 0x4b, 0xfb, 0x20, 0x65, 0x23, 0x99, 0xfc, 0xf6, 0x6c,
	0x2b, 0x8f, 0xab, 0xe9, 0xa6, 0x6b, 0x70, 0x33, 0x5b, 0x40, 0x30, 0x5f, 0x40, 0xf0, 0xb1, 0x80,
	0xe0, 0x79, 0x09, 0xad, 0xf9, 0x12, 0x5a, 0x6f, 0x4b, 0x68, 0x3d, 0xf4, 0xc2, 0x58, 0x44, 0xd2,
	0x47, 0x01, 0x4b, 0x71, 0xc2, 0x72, 0x3a, 0x22, 0x19, 0x09, 0xe2, 0x9c, 0x0b, 0x4a, 0xf0, 0x13,
	0xe1, 0xe9, 0x14, 0x4f, 0x7f, 0x1c, 0xb1, 0xec, 0xc5, 0xfd, 0xaa, 0xda, 0xe6, 0xe2, 0x3b, 0x00,
	0x00, 0xff, 0xff, 0x3d, 0x59, 0xd0, 0x11, 0x44, 0x02, 0x00, 0x00,
}

func (m *AuthGenesisState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthGenesisState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthGenesisState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ModuleAccountTypeurl) > 0 {
		i -= len(m.ModuleAccountTypeurl)
		copy(dAtA[i:], m.ModuleAccountTypeurl)
		i = encodeVarintAuthGenesis(dAtA, i, uint64(len(m.ModuleAccountTypeurl)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.BaseAccountTypeurl) > 0 {
		i -= len(m.BaseAccountTypeurl)
		copy(dAtA[i:], m.BaseAccountTypeurl)
		i = encodeVarintAuthGenesis(dAtA, i, uint64(len(m.BaseAccountTypeurl)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Accounts) > 0 {
		for iNdEx := len(m.Accounts) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Accounts[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintAuthGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintAuthGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintAuthGenesis(dAtA []byte, offset int, v uint64) int {
	offset -= sovAuthGenesis(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *AuthGenesisState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Params.Size()
	n += 1 + l + sovAuthGenesis(uint64(l))
	if len(m.Accounts) > 0 {
		for _, e := range m.Accounts {
			l = e.Size()
			n += 1 + l + sovAuthGenesis(uint64(l))
		}
	}
	l = len(m.BaseAccountTypeurl)
	if l > 0 {
		n += 1 + l + sovAuthGenesis(uint64(l))
	}
	l = len(m.ModuleAccountTypeurl)
	if l > 0 {
		n += 1 + l + sovAuthGenesis(uint64(l))
	}
	return n
}

func sovAuthGenesis(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozAuthGenesis(x uint64) (n int) {
	return sovAuthGenesis(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AuthGenesisState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuthGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthGenesisState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthGenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Accounts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Accounts = append(m.Accounts, &types1.Any{})
			if err := m.Accounts[len(m.Accounts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaseAccountTypeurl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BaseAccountTypeurl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleAccountTypeurl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ModuleAccountTypeurl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuthGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAuthGenesis(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAuthGenesis
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAuthGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAuthGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAuthGenesis
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupAuthGenesis
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthAuthGenesis
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthAuthGenesis        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAuthGenesis          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupAuthGenesis = fmt.Errorf("proto: unexpected end of group")
)
