syntax = "proto3";
package mythos.cosmosmod.v1;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos/base/v1beta1/coin.proto";
import "amino/amino.proto";
import "cosmos/staking/v1beta1/tx.proto";

option go_package = "github.com/loredanacirstea/wasmx/x/cosmosmod/types";
option (gogoproto.goproto_getters_all) = false;

// InitGenesisResponse is the InitGenesis response expected from smart contracts
// that act as modules
message InitGenesisResponse {
    repeated ValidatorUpdate updates = 1 [ (gogoproto.nullable) = false ];
}

message ValidatorUpdate {
    google.protobuf.Any pub_key = 1 [(cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey"];
    int64 power   = 2;
}

// DelegationResponse is equivalent to Delegation except that it contains a
// balance in addition to shares which is more suitable for client responses.
message QueryTotalSupplyResponse {
    option (gogoproto.equal) = false;

    cosmos.base.v1beta1.Coin supply = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}
