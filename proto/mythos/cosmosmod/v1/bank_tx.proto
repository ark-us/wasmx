syntax = "proto3";
package mythos.cosmosmod.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";
import "cosmos/bank/v1beta1/tx.proto";

option go_package = "mythos/v1/x/cosmosmod/types";
option (gogoproto.goproto_getters_all) = false;

// MsgBank defines the grpc server for bank
service MsgBank {
    option (cosmos.msg.v1.service) = true;

    // Send defines a method for sending coins from one account to another account.
    rpc Send(cosmos.bank.v1beta1.MsgSend) returns (cosmos.bank.v1beta1.MsgSendResponse);

    // MultiSend defines a method for sending coins from some accounts to other accounts.
    rpc MultiSend(cosmos.bank.v1beta1.MsgMultiSend) returns (cosmos.bank.v1beta1.MsgMultiSendResponse);

    // UpdateParams defines a governance operation for updating the x/bank module parameters.
    // The authority is defined in the keeper.
    //
    // Since: cosmos-sdk 0.47
    rpc UpdateParams(cosmos.bank.v1beta1.MsgUpdateParams) returns (cosmos.bank.v1beta1.MsgUpdateParamsResponse);

    // SetSendEnabled is a governance operation for setting the SendEnabled flag
    // on any number of Denoms. Only the entries to add or update should be
    // included. Entries that already exist in the store, but that aren't
    // included in this message, will be left unchanged.
    //
    // Since: cosmos-sdk 0.47
    rpc SetSendEnabled(cosmos.bank.v1beta1.MsgSetSendEnabled) returns (cosmos.bank.v1beta1.MsgSetSendEnabledResponse);
}
