syntax = "proto3";
package mythos.cosmosmod.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";
import "cosmos/query/v1/query.proto";
import "cosmos/auth/v1beta1/query.proto";

option go_package = "mythos/v1/x/cosmosmod/types";
option (gogoproto.goproto_getters_all) = false;

// Query defines the gRPC querier service.
service QueryAuth {
    // Accounts returns all the existing accounts.
    //
    // When called from another module, this query might consume a high amount of
    // gas if the pagination field is incorrectly set.
    //
    // Since: cosmos-sdk 0.43
    rpc Accounts(cosmos.auth.v1beta1.QueryAccountsRequest) returns (cosmos.auth.v1beta1.QueryAccountsResponse) {
      option (cosmos.query.v1.module_query_safe) = true;
      option (google.api.http).get               = "/cosmos/auth/v1beta1/accounts";
    }

    // Account returns account details based on address.
    rpc Account(cosmos.auth.v1beta1.QueryAccountRequest) returns (cosmos.auth.v1beta1.QueryAccountResponse) {
      option (cosmos.query.v1.module_query_safe) = true;
      option (google.api.http).get               = "/cosmos/auth/v1beta1/accounts/{address}";
    }

    // AccountAddressByID returns account address based on account number.
    //
    // Since: cosmos-sdk 0.46.2
    rpc AccountAddressByID(cosmos.auth.v1beta1.QueryAccountAddressByIDRequest) returns (cosmos.auth.v1beta1.QueryAccountAddressByIDResponse) {
      option (cosmos.query.v1.module_query_safe) = true;
      option (google.api.http).get               = "/cosmos/auth/v1beta1/address_by_id/{id}";
    }

    // Params queries all parameters.
    rpc Params(cosmos.auth.v1beta1.QueryParamsRequest) returns (cosmos.auth.v1beta1.QueryParamsResponse) {
      option (cosmos.query.v1.module_query_safe) = true;
      option (google.api.http).get               = "/cosmos/auth/v1beta1/params";
    }

    // ModuleAccounts returns all the existing module accounts.
    //
    // Since: cosmos-sdk 0.46
    rpc ModuleAccounts(cosmos.auth.v1beta1.QueryModuleAccountsRequest) returns (cosmos.auth.v1beta1.QueryModuleAccountsResponse) {
      option (cosmos.query.v1.module_query_safe) = true;
      option (google.api.http).get               = "/cosmos/auth/v1beta1/module_accounts";
    }

    // ModuleAccountByName returns the module account info by module name
    rpc ModuleAccountByName(cosmos.auth.v1beta1.QueryModuleAccountByNameRequest) returns (cosmos.auth.v1beta1.QueryModuleAccountByNameResponse) {
      option (cosmos.query.v1.module_query_safe) = true;
      option (google.api.http).get               = "/cosmos/auth/v1beta1/module_accounts/{name}";
    }

    // Bech32Prefix queries bech32Prefix
    //
    // Since: cosmos-sdk 0.46
    rpc Bech32Prefix(cosmos.auth.v1beta1.Bech32PrefixRequest) returns (cosmos.auth.v1beta1.Bech32PrefixResponse) {
      option (google.api.http).get = "/cosmos/auth/v1beta1/bech32";
    }

    // AddressBytesToString converts Account Address bytes to string
    //
    // Since: cosmos-sdk 0.46
    rpc AddressBytesToString(cosmos.auth.v1beta1.AddressBytesToStringRequest) returns (cosmos.auth.v1beta1.AddressBytesToStringResponse) {
      option (google.api.http).get = "/cosmos/auth/v1beta1/bech32/{address_bytes}";
    }

    // AddressStringToBytes converts Address string to bytes
    //
    // Since: cosmos-sdk 0.46
    rpc AddressStringToBytes(cosmos.auth.v1beta1.AddressStringToBytesRequest) returns (cosmos.auth.v1beta1.AddressStringToBytesResponse) {
      option (google.api.http).get = "/cosmos/auth/v1beta1/bech32/{address_string}";
    }

    // AccountInfo queries account info which is common to all account types.
    //
    // Since: cosmos-sdk 0.47
    rpc AccountInfo(cosmos.auth.v1beta1.QueryAccountInfoRequest) returns (cosmos.auth.v1beta1.QueryAccountInfoResponse) {
      option (cosmos.query.v1.module_query_safe) = true;
      option (google.api.http).get               = "/cosmos/auth/v1beta1/account_info/{address}";
    }
}
