syntax = "proto3";
package wasmx.websrv;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "wasmx/websrv/params.proto";

option go_package = "wasmx/x/websrv/types";

// Query defines the gRPC querier service.
service Query {
  // HttpGet makes a get request to the webserver
  rpc HttpGet(QueryHttpGetRequest)
      returns (QueryHttpGetResponse) {
    option (google.api.http).get = "/wasmx/websrv/v1/get/{http_request}";
  }
  // ContractByRoute gets the contract controlling a given route
  rpc ContractByRoute(QueryContractByRouteRequest)
      returns (QueryContractByRouteResponse) {
    option (google.api.http).get = "/wasmx/websrv/v1/route/{path}";
  }
  // RouteByContract gets the route controlled by a given contract
  rpc RouteByContract(QueryRouteByContractRequest)
      returns (QueryRouteByContractResponse) {
    option (google.api.http).get = "/wasmx/websrv/v1/contract/{contract_address}";
  }
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/wasmx/websrv/v1/params";
  }
}

// QueryContractByRouteRequest is the request type for the
// Query/ContractByRoute RPC method.
message QueryContractByRouteRequest {
  string path = 1;
}

// QueryContractByRouteResponse is the response type for the
// Query/ContractByRoute RPC method.
message QueryContractByRouteResponse {
  string contract_address = 1;
}

// QueryRouteByContractRequest is the request type for the
// Query/RouteByContract RPC method.
message QueryRouteByContractRequest {
  string contract_address = 1;
}

// QueryRouteByContractResponse is the response type for the
// Query/RouteByContract RPC method.
message QueryRouteByContractResponse {
  string path = 1;
}

message RequestParam {
  string key = 1;
  string value = 2;
}

message RequestUrl {
  string Path = 1;
  repeated RequestParam params = 2 [(gogoproto.nullable) = false];
}

message HttpRequestGet {
	RequestUrl url = 1;
}

// QueryHttpGetRequest is the request type for the
// Query/HttpGet RPC method.
message QueryHttpGetRequest {
  bytes http_request = 1;
}

message HttpRequestGetResponse {
	// The http get response
  bytes content = 1;
  // Content-Type
  string content_type = 2;
}

// QueryHttpGetResponse is the response type for the
// Query/HttpGet RPC method.
message QueryHttpGetResponse {
  HttpRequestGetResponse data = 1;
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}
