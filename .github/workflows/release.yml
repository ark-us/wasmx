# This workflow is useful if you want to automate the process of:
#
# a) Creating a new prelease when you push a new tag with a "v" prefix (version).
#
#    This type of prerelease is meant to be used for production: alpha, beta, rc, etc. types of releases.
#    After the prerelease is created, you need to make your changes on the release page at the relevant
#    Github page and publish your release.
#
# The workflow will run only if a tag with a "v" prefix is pushed.
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Build Mythos-Wazero Binary for Multiple Platforms
    runs-on: ubuntu-latest
    env:
      GOPRIVATE: github.com/loredanacirstea*
      GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64]
        exclude:
          - os: windows-latest
            arch: arm64

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23

    - run: git config --global url.https://$GH_ACCESS_TOKEN@github.com/.insteadOf https://github.com/

    - name: Set up environment variables
      run: |
        echo "GOOS=$(echo ${{ matrix.os }} | cut -d'-' -f1)" >> $GITHUB_ENV
        echo "GOARCH=${{ matrix.arch }}" >> $GITHUB_ENV
        echo "TAG_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV # Extract the tag version
      shell: bash

    - name: Build binary
      run: |
        echo "GOOS=$GOOS"
        echo "GOARCH=$GOARCH"
        echo "TAG_VERSION=$TAG_VERSION"
        cd mythos-wazero
        echo "cd mythos-wazero"
        pwd && ls -a
        make build
        echo "ls mythos-wazero/build"
        ls ./mythos-wazero/build

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        # Include tag version in the file name
        name: mythos-wz-${{ env.TAG_VERSION }}-${{ env.GOOS }}-${{ env.GOARCH }}
        path: |
          ./mythos-wazero/build/mythos-wz-${{ env.GOOS }}-${{ env.GOARCH }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: Create Release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        prerelease: true
        files: |
          ./mythos-wazero/build/*
