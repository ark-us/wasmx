# This workflow is useful if you want to automate the process of:
#
# a) Creating a new prelease when you push a new tag with a "v" prefix (version).
#
#    This type of prerelease is meant to be used for production: alpha, beta, rc, etc. types of releases.
#    After the prerelease is created, you need to make your changes on the release page at the relevant
#    Github page and publish your release.
#
# The workflow will run only if a tag with a "v" prefix is pushed.
on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build Mythos-Wazero Binary for Multiple Platforms
    runs-on: ubuntu-latest
    env:
      GOPRIVATE: github.com/loredanacirstea*
      GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64]
        exclude:
          - os: windows-latest
            arch: arm64
          - os: ubuntu-latest
            arch: arm64

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23

    - run: git config --global url.https://$GH_ACCESS_TOKEN@github.com/.insteadOf https://github.com/

    - name: Set up environment variables
      run: |
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          echo "GOOS=linux" >> $GITHUB_ENV
        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          echo "GOOS=darwin" >> $GITHUB_ENV
        elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          echo "GOOS=windows" >> $GITHUB_ENV
        fi
        echo "GOARCH=${{ matrix.arch }}" >> $GITHUB_ENV
        echo "TAG_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
      shell: bash

    - name: Set up binary path in environment
      run: |
        echo "BINARY_PATH=mythos-wz-${{ env.TAG_VERSION }}-${{ env.GOOS }}-${{ env.GOARCH }}" >> $GITHUB_ENV
      shell: bash

    - name: Build binary
      run: |
        echo "GOOS=$GOOS"
        echo "GOARCH=$GOARCH"
        echo "TAG_VERSION=$TAG_VERSION"
        echo "BINARY_PATH=$BINARY_PATH"

        cd mythos-wazero
        echo "cd mythos-wazero"
        pwd && ls -a
        make build-path
        echo "ls mythos-wazero/build"
        ls -R ./build
        cd .. && pwd

    - name: Compress binary folder
      run: |
        cd mythos-wazero/build
        echo "Compressing folder: ${{ env.BINARY_PATH }}"
        tar -czvf "${{ env.BINARY_PATH }}.tar.gz" "${{ env.BINARY_PATH }}"
        pwd
        ls -a
        ls -l mythos-wz-*.tar.gz
        file mythos-wz-*.tar.gz
        file ${{ env.BINARY_PATH }}.tar.gz
        cd ../..

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.BINARY_PATH }}.tar.gz
        path: ./mythos-wazero/build/${{ env.BINARY_PATH }}.tar.gz
        compression-level: 0

  release:
    name: Release Binaries
    needs: build
    runs-on: ubuntu-latest
    steps:

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Display structure of downloaded files
      run: |
        pwd
        ls
        ls -l mythos-wz-*.tar.gz
        file mythos-wz-*.tar.gz

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: ${{ github.ref_name }}
        prerelease: false
        draft: true

    - name: Install GitHub CLI
      run: sudo apt-get install -y gh

    - name: Upload Release Assets
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        pwd
        ls
        for dir in ./mythos-wz-*.tar.gz; do
          echo "Processing directory: $dir"
          file "$dir"
          if [ -d "$dir" ]; then
            inner_file="$dir/$(basename $dir)"
            echo "Uploading inner file: $inner_file"
            file "$inner_file"
            gh release upload ${{ github.ref_name }} "$inner_file" --clobber
          else
            echo "Uploading file: $dir"
            gh release upload ${{ github.ref_name }} "$dir" --clobber
          fi
        done

  release-public:
    name: Upload Release Assets to Public Repo
    needs: release
    runs-on: ubuntu-latest
    steps:

    - name: Clone Target Repository
      env:
        PUBLIC_RELEASE_REPO_TOKEN: ${{ secrets.PUBLIC_RELEASE_REPO_TOKEN }}
      run: |
        git clone https://$PUBLIC_RELEASE_REPO_TOKEN@github.com/loredanacirstea/tempreleases.git target-repo

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release in Target Repository
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PUBLIC_RELEASE_REPO_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: mythos ${{ github.ref_name }}
        prerelease: false
        draft: true
        owner: loredanacirstea
        repo: tempreleases
        target_commitish: main

    - name: Upload Release Assets to Public Repo
      env:
        GITHUB_TOKEN: ${{ secrets.PUBLIC_RELEASE_REPO_TOKEN }}
      run: |
        pwd
        ls
        for dir in ./mythos-wz-*.tar.gz; do
          echo "Processing directory: $dir"
          file "$dir"
          if [ -d "$dir" ]; then
            inner_file="$dir/$(basename $dir)"
            echo "Uploading inner file: $inner_file"
            file "$inner_file"
            gh release upload ${{ github.ref_name }} "$inner_file" --clobber
          else
            echo "Uploading file: $dir"
            gh release upload ${{ github.ref_name }} "$dir" --clobber
          fi
        done



