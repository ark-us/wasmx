// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mythos/cosmosmod/v1/auth_tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	types "github.com/cosmos/cosmos-sdk/x/auth/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("mythos/cosmosmod/v1/auth_tx.proto", fileDescriptor_9637952256ee2d29) }

var fileDescriptor_9637952256ee2d29 = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0xcc, 0xad, 0x2c, 0xc9,
	0xc8, 0x2f, 0xd6, 0x4f, 0xce, 0x2f, 0xce, 0x05, 0xa1, 0x14, 0xfd, 0x32, 0x43, 0xfd, 0xc4, 0xd2,
	0x92, 0x8c, 0xf8, 0x92, 0x0a, 0xbd, 0x82, 0xa2, 0xfc, 0x92, 0x7c, 0x21, 0x61, 0x88, 0x12, 0x3d,
	0xb8, 0x12, 0xbd, 0x32, 0x43, 0x29, 0x91, 0xf4, 0xfc, 0xf4, 0x7c, 0xb0, 0xbc, 0x3e, 0x88, 0x05,
	0x51, 0x2a, 0x25, 0x09, 0x51, 0x13, 0x0f, 0x91, 0x80, 0x70, 0xa0, 0x52, 0xe2, 0x10, 0x9e, 0x7e,
	0x6e, 0x71, 0x3a, 0xc8, 0x8a, 0xdc, 0xe2, 0x74, 0xa8, 0x84, 0x60, 0x62, 0x6e, 0x66, 0x5e, 0xbe,
	0x3e, 0x98, 0x84, 0x0a, 0xc9, 0x40, 0xd5, 0x82, 0xdc, 0xa1, 0x5f, 0x66, 0x98, 0x94, 0x5a, 0x92,
	0x68, 0xa8, 0x0f, 0x73, 0x8f, 0x51, 0x09, 0x17, 0xbb, 0x6f, 0x71, 0xba, 0x63, 0x69, 0x49, 0x86,
	0x50, 0x12, 0x17, 0x4f, 0x68, 0x41, 0x4a, 0x62, 0x49, 0x6a, 0x40, 0x62, 0x51, 0x62, 0x6e, 0xb1,
	0x90, 0x0a, 0xd4, 0x91, 0x7a, 0x20, 0x9d, 0x7a, 0x50, 0x9d, 0x7a, 0xbe, 0xc5, 0xe9, 0xc8, 0xaa,
	0xa4, 0x74, 0x88, 0x51, 0x15, 0x94, 0x5a, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0xc5, 0xda, 0xf0,
	0x7c, 0x83, 0x16, 0xa3, 0x93, 0xe5, 0x89, 0x87, 0x72, 0x0c, 0x27, 0x1e, 0xc9, 0x31, 0x5e, 0x78,
	0x24, 0xc7, 0xf8, 0xe0, 0x91, 0x1c, 0xe3, 0x84, 0xc7, 0x72, 0x0c, 0x17, 0x1e, 0xcb, 0x31, 0xdc,
	0x78, 0x2c, 0xc7, 0x10, 0x25, 0x0d, 0x0d, 0xc6, 0x32, 0x43, 0xfd, 0x0a, 0xa4, 0xb0, 0x2c, 0xa9,
	0x2c, 0x48, 0x2d, 0x4e, 0x62, 0x03, 0xbb, 0xdb, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x40, 0x6d,
	0xec, 0x70, 0x6c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgAuthClient is the client API for MsgAuth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgAuthClient interface {
	// UpdateParams defines a (governance) operation for updating the x/auth module
	// parameters. The authority defaults to the x/gov module account.
	//
	// Since: cosmos-sdk 0.47
	UpdateParams(ctx context.Context, in *types.MsgUpdateParams, opts ...grpc.CallOption) (*types.MsgUpdateParamsResponse, error)
}

type msgAuthClient struct {
	cc grpc1.ClientConn
}

func NewMsgAuthClient(cc grpc1.ClientConn) MsgAuthClient {
	return &msgAuthClient{cc}
}

func (c *msgAuthClient) UpdateParams(ctx context.Context, in *types.MsgUpdateParams, opts ...grpc.CallOption) (*types.MsgUpdateParamsResponse, error) {
	out := new(types.MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/mythos.cosmosmod.v1.MsgAuth/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgAuthServer is the server API for MsgAuth service.
type MsgAuthServer interface {
	// UpdateParams defines a (governance) operation for updating the x/auth module
	// parameters. The authority defaults to the x/gov module account.
	//
	// Since: cosmos-sdk 0.47
	UpdateParams(context.Context, *types.MsgUpdateParams) (*types.MsgUpdateParamsResponse, error)
}

// UnimplementedMsgAuthServer can be embedded to have forward compatible implementations.
type UnimplementedMsgAuthServer struct {
}

func (*UnimplementedMsgAuthServer) UpdateParams(ctx context.Context, req *types.MsgUpdateParams) (*types.MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}

func RegisterMsgAuthServer(s grpc1.Server, srv MsgAuthServer) {
	s.RegisterService(&_MsgAuth_serviceDesc, srv)
}

func _MsgAuth_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgAuthServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mythos.cosmosmod.v1.MsgAuth/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgAuthServer).UpdateParams(ctx, req.(*types.MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _MsgAuth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mythos.cosmosmod.v1.MsgAuth",
	HandlerType: (*MsgAuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateParams",
			Handler:    _MsgAuth_UpdateParams_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mythos/cosmosmod/v1/auth_tx.proto",
}
