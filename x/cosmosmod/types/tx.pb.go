// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mythos/cosmosmod/v1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	types "github.com/cosmos/cosmos-sdk/x/staking/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("mythos/cosmosmod/v1/tx.proto", fileDescriptor_594af509905a5c21) }

var fileDescriptor_594af509905a5c21 = []byte{
	// 380 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0x41, 0x4b, 0xc3, 0x30,
	0x18, 0x86, 0x5b, 0x84, 0x21, 0x41, 0x19, 0x56, 0x41, 0x16, 0xa5, 0x1e, 0x44, 0x14, 0xc5, 0xc6,
	0x4d, 0x2f, 0x82, 0xa7, 0x4d, 0x8f, 0x03, 0x19, 0xcc, 0x83, 0x08, 0x92, 0xae, 0x21, 0x2b, 0x5b,
	0x93, 0xae, 0x09, 0x63, 0xfb, 0x15, 0x7a, 0xf2, 0x37, 0xed, 0xb8, 0xa3, 0x47, 0xdd, 0xfe, 0x88,
	0x74, 0x4d, 0xb3, 0x39, 0x30, 0x14, 0xa1, 0x94, 0xa6, 0xef, 0xf3, 0x7e, 0xef, 0x97, 0x84, 0x0f,
	0x1c, 0x46, 0x63, 0xd9, 0xe5, 0x02, 0x75, 0xb8, 0x88, 0xd2, 0x27, 0x40, 0xc3, 0x2a, 0x92, 0x23,
	0x2f, 0x4e, 0xb8, 0xe4, 0xce, 0x6e, 0xa6, 0x7a, 0x5a, 0xf5, 0x86, 0x55, 0xb8, 0x47, 0x39, 0xe5,
	0x0b, 0x1d, 0xa5, 0x5f, 0x19, 0x0a, 0x2b, 0x19, 0xf3, 0x9a, 0x09, 0xd9, 0x42, 0x49, 0xfb, 0xd9,
	0x0a, 0x45, 0x82, 0xa6, 0xd5, 0x23, 0x41, 0x95, 0xb0, 0x83, 0xa3, 0x90, 0x71, 0xb4, 0x78, 0xab,
	0x5f, 0x47, 0x8a, 0x15, 0x12, 0xf7, 0x42, 0x96, 0xf2, 0x3e, 0x91, 0x78, 0xd9, 0x52, 0xed, 0xa3,
	0x04, 0x36, 0x9a, 0x82, 0x3a, 0x03, 0x50, 0x6e, 0x24, 0x04, 0x4b, 0xf2, 0x84, 0xfb, 0x61, 0x80,
	0x25, 0x4f, 0x9c, 0x73, 0xd5, 0xa7, 0xa7, 0xcc, 0x9e, 0x32, 0x7b, 0x4d, 0x41, 0xd7, 0x58, 0x58,
	0x2b, 0xce, 0xb6, 0x88, 0x88, 0x39, 0x13, 0xc4, 0xe9, 0x81, 0xed, 0x87, 0x20, 0x94, 0xcb, 0xc0,
	0x33, 0x43, 0x91, 0x5f, 0x24, 0xbc, 0x2a, 0x4a, 0xea, 0xb0, 0x17, 0xb0, 0x79, 0x4f, 0xfa, 0x84,
	0x62, 0x49, 0x9c, 0x63, 0x83, 0x3b, 0x87, 0xe0, 0x45, 0x01, 0x48, 0x57, 0x1f, 0x80, 0x72, 0x9d,
	0xd0, 0x90, 0xb5, 0x48, 0x90, 0x87, 0x98, 0x4e, 0x6f, 0x8d, 0x35, 0x9e, 0xde, 0x1a, 0xab, 0x23,
	0x7d, 0x00, 0xda, 0x4c, 0xa7, 0x9d, 0x18, 0x2a, 0x2c, 0x31, 0x78, 0x59, 0x08, 0xd3, 0x19, 0x6f,
	0x36, 0xa8, 0x34, 0x30, 0xeb, 0x90, 0x7e, 0x9b, 0xf9, 0x9c, 0x05, 0x21, 0xcb, 0xb7, 0x1e, 0x72,
	0xe6, 0xdc, 0x98, 0xee, 0xfc, 0x2f, 0x17, 0xbc, 0xfb, 0x8f, 0x4b, 0x77, 0xd4, 0x05, 0x5b, 0xed,
	0x38, 0xc0, 0x92, 0x3c, 0xe2, 0x04, 0x47, 0xc2, 0x39, 0x35, 0x6d, 0x68, 0x05, 0x84, 0xa8, 0x20,
	0x98, 0x27, 0xd5, 0x6f, 0x27, 0xdf, 0xae, 0x35, 0x99, 0xb9, 0xf6, 0x74, 0xe6, 0xda, 0x5f, 0x33,
	0xd7, 0x7e, 0x9f, 0xbb, 0xd6, 0x74, 0xee, 0x5a, 0x9f, 0x73, 0xd7, 0x7a, 0x3e, 0x50, 0x73, 0x3e,
	0xac, 0xa2, 0xd1, 0xca, 0xb0, 0xcb, 0x71, 0x4c, 0x84, 0x5f, 0x5a, 0x8c, 0xd6, 0xf5, 0x4f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xf5, 0xa9, 0x99, 0x92, 0x0d, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// staking
	// CreateValidator defines a method for creating a new validator.
	CreateValidator(ctx context.Context, in *types.MsgCreateValidator, opts ...grpc.CallOption) (*types.MsgCreateValidatorResponse, error)
	// EditValidator defines a method for editing an existing validator.
	EditValidator(ctx context.Context, in *types.MsgEditValidator, opts ...grpc.CallOption) (*types.MsgEditValidatorResponse, error)
	// Delegate defines a method for performing a delegation of coins
	// from a delegator to a validator.
	Delegate(ctx context.Context, in *types.MsgDelegate, opts ...grpc.CallOption) (*types.MsgDelegateResponse, error)
	// BeginRedelegate defines a method for performing a redelegation
	// of coins from a delegator and source validator to a destination validator.
	BeginRedelegate(ctx context.Context, in *types.MsgBeginRedelegate, opts ...grpc.CallOption) (*types.MsgBeginRedelegateResponse, error)
	// Undelegate defines a method for performing an undelegation from a
	// delegate and a validator.
	Undelegate(ctx context.Context, in *types.MsgUndelegate, opts ...grpc.CallOption) (*types.MsgUndelegateResponse, error)
	// CancelUnbondingDelegation defines a method for performing canceling the unbonding delegation
	// and delegate back to previous validator.
	//
	// Since: cosmos-sdk 0.46
	CancelUnbondingDelegation(ctx context.Context, in *types.MsgCancelUnbondingDelegation, opts ...grpc.CallOption) (*types.MsgCancelUnbondingDelegationResponse, error)
	// UpdateParams defines an operation for updating the x/staking module
	// parameters.
	// Since: cosmos-sdk 0.47
	UpdateParams(ctx context.Context, in *types.MsgUpdateParams, opts ...grpc.CallOption) (*types.MsgUpdateParamsResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateValidator(ctx context.Context, in *types.MsgCreateValidator, opts ...grpc.CallOption) (*types.MsgCreateValidatorResponse, error) {
	out := new(types.MsgCreateValidatorResponse)
	err := c.cc.Invoke(ctx, "/mythos.cosmosmod.v1.Msg/CreateValidator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) EditValidator(ctx context.Context, in *types.MsgEditValidator, opts ...grpc.CallOption) (*types.MsgEditValidatorResponse, error) {
	out := new(types.MsgEditValidatorResponse)
	err := c.cc.Invoke(ctx, "/mythos.cosmosmod.v1.Msg/EditValidator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Delegate(ctx context.Context, in *types.MsgDelegate, opts ...grpc.CallOption) (*types.MsgDelegateResponse, error) {
	out := new(types.MsgDelegateResponse)
	err := c.cc.Invoke(ctx, "/mythos.cosmosmod.v1.Msg/Delegate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) BeginRedelegate(ctx context.Context, in *types.MsgBeginRedelegate, opts ...grpc.CallOption) (*types.MsgBeginRedelegateResponse, error) {
	out := new(types.MsgBeginRedelegateResponse)
	err := c.cc.Invoke(ctx, "/mythos.cosmosmod.v1.Msg/BeginRedelegate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Undelegate(ctx context.Context, in *types.MsgUndelegate, opts ...grpc.CallOption) (*types.MsgUndelegateResponse, error) {
	out := new(types.MsgUndelegateResponse)
	err := c.cc.Invoke(ctx, "/mythos.cosmosmod.v1.Msg/Undelegate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CancelUnbondingDelegation(ctx context.Context, in *types.MsgCancelUnbondingDelegation, opts ...grpc.CallOption) (*types.MsgCancelUnbondingDelegationResponse, error) {
	out := new(types.MsgCancelUnbondingDelegationResponse)
	err := c.cc.Invoke(ctx, "/mythos.cosmosmod.v1.Msg/CancelUnbondingDelegation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateParams(ctx context.Context, in *types.MsgUpdateParams, opts ...grpc.CallOption) (*types.MsgUpdateParamsResponse, error) {
	out := new(types.MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/mythos.cosmosmod.v1.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// staking
	// CreateValidator defines a method for creating a new validator.
	CreateValidator(context.Context, *types.MsgCreateValidator) (*types.MsgCreateValidatorResponse, error)
	// EditValidator defines a method for editing an existing validator.
	EditValidator(context.Context, *types.MsgEditValidator) (*types.MsgEditValidatorResponse, error)
	// Delegate defines a method for performing a delegation of coins
	// from a delegator to a validator.
	Delegate(context.Context, *types.MsgDelegate) (*types.MsgDelegateResponse, error)
	// BeginRedelegate defines a method for performing a redelegation
	// of coins from a delegator and source validator to a destination validator.
	BeginRedelegate(context.Context, *types.MsgBeginRedelegate) (*types.MsgBeginRedelegateResponse, error)
	// Undelegate defines a method for performing an undelegation from a
	// delegate and a validator.
	Undelegate(context.Context, *types.MsgUndelegate) (*types.MsgUndelegateResponse, error)
	// CancelUnbondingDelegation defines a method for performing canceling the unbonding delegation
	// and delegate back to previous validator.
	//
	// Since: cosmos-sdk 0.46
	CancelUnbondingDelegation(context.Context, *types.MsgCancelUnbondingDelegation) (*types.MsgCancelUnbondingDelegationResponse, error)
	// UpdateParams defines an operation for updating the x/staking module
	// parameters.
	// Since: cosmos-sdk 0.47
	UpdateParams(context.Context, *types.MsgUpdateParams) (*types.MsgUpdateParamsResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateValidator(ctx context.Context, req *types.MsgCreateValidator) (*types.MsgCreateValidatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateValidator not implemented")
}
func (*UnimplementedMsgServer) EditValidator(ctx context.Context, req *types.MsgEditValidator) (*types.MsgEditValidatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditValidator not implemented")
}
func (*UnimplementedMsgServer) Delegate(ctx context.Context, req *types.MsgDelegate) (*types.MsgDelegateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delegate not implemented")
}
func (*UnimplementedMsgServer) BeginRedelegate(ctx context.Context, req *types.MsgBeginRedelegate) (*types.MsgBeginRedelegateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BeginRedelegate not implemented")
}
func (*UnimplementedMsgServer) Undelegate(ctx context.Context, req *types.MsgUndelegate) (*types.MsgUndelegateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Undelegate not implemented")
}
func (*UnimplementedMsgServer) CancelUnbondingDelegation(ctx context.Context, req *types.MsgCancelUnbondingDelegation) (*types.MsgCancelUnbondingDelegationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelUnbondingDelegation not implemented")
}
func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *types.MsgUpdateParams) (*types.MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateValidator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.MsgCreateValidator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateValidator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mythos.cosmosmod.v1.Msg/CreateValidator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateValidator(ctx, req.(*types.MsgCreateValidator))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_EditValidator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.MsgEditValidator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).EditValidator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mythos.cosmosmod.v1.Msg/EditValidator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).EditValidator(ctx, req.(*types.MsgEditValidator))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Delegate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.MsgDelegate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Delegate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mythos.cosmosmod.v1.Msg/Delegate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Delegate(ctx, req.(*types.MsgDelegate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_BeginRedelegate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.MsgBeginRedelegate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).BeginRedelegate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mythos.cosmosmod.v1.Msg/BeginRedelegate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).BeginRedelegate(ctx, req.(*types.MsgBeginRedelegate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Undelegate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.MsgUndelegate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Undelegate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mythos.cosmosmod.v1.Msg/Undelegate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Undelegate(ctx, req.(*types.MsgUndelegate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CancelUnbondingDelegation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.MsgCancelUnbondingDelegation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CancelUnbondingDelegation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mythos.cosmosmod.v1.Msg/CancelUnbondingDelegation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CancelUnbondingDelegation(ctx, req.(*types.MsgCancelUnbondingDelegation))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mythos.cosmosmod.v1.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*types.MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mythos.cosmosmod.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateValidator",
			Handler:    _Msg_CreateValidator_Handler,
		},
		{
			MethodName: "EditValidator",
			Handler:    _Msg_EditValidator_Handler,
		},
		{
			MethodName: "Delegate",
			Handler:    _Msg_Delegate_Handler,
		},
		{
			MethodName: "BeginRedelegate",
			Handler:    _Msg_BeginRedelegate_Handler,
		},
		{
			MethodName: "Undelegate",
			Handler:    _Msg_Undelegate_Handler,
		},
		{
			MethodName: "CancelUnbondingDelegation",
			Handler:    _Msg_CancelUnbondingDelegation_Handler,
		},
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mythos/cosmosmod/v1/tx.proto",
}
