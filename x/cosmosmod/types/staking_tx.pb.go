// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mythos/cosmosmod/v1/staking_tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	types "github.com/cosmos/cosmos-sdk/x/staking/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("mythos/cosmosmod/v1/staking_tx.proto", fileDescriptor_8cc9d5b6738c903c)
}

var fileDescriptor_8cc9d5b6738c903c = []byte{
	// 400 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0xc1, 0x4a, 0xc3, 0x30,
	0x18, 0xc7, 0xdb, 0x83, 0x43, 0x82, 0x32, 0xac, 0x82, 0x2c, 0x42, 0x3d, 0xa8, 0x28, 0x13, 0x1b,
	0x3b, 0xbd, 0x08, 0x9e, 0x36, 0x3d, 0x0e, 0x64, 0x32, 0x0f, 0x22, 0x8c, 0x74, 0x0d, 0x59, 0xd9,
	0x9a, 0x74, 0x4d, 0x28, 0xdb, 0xcd, 0x37, 0xd0, 0x87, 0xf0, 0x01, 0x7c, 0x8c, 0x1d, 0x77, 0xf4,
	0xa8, 0xdb, 0xc1, 0xd7, 0x90, 0xad, 0x69, 0x37, 0x07, 0x96, 0x22, 0x94, 0xd2, 0xf4, 0xff, 0xfb,
	0xfe, 0xff, 0x2f, 0x29, 0x5f, 0xc1, 0xa1, 0x3f, 0x94, 0x1d, 0x2e, 0x50, 0x9b, 0x0b, 0x7f, 0x76,
	0xb9, 0x28, 0xb2, 0x91, 0x90, 0xb8, 0xeb, 0x31, 0xda, 0x92, 0x03, 0x2b, 0x08, 0xb9, 0xe4, 0xc6,
	0x76, 0x4c, 0x59, 0x29, 0x65, 0x45, 0x36, 0xdc, 0xa1, 0x9c, 0xf2, 0xb9, 0x8e, 0x66, 0x4f, 0x31,
	0x0a, 0x4b, 0x31, 0xd3, 0x8a, 0x85, 0x78, 0xa1, 0xa4, 0xdd, 0x78, 0x85, 0x7c, 0x41, 0x67, 0x29,
	0xbe, 0xa0, 0x4a, 0xd8, 0xc2, 0xbe, 0xc7, 0x38, 0x9a, 0xdf, 0xd5, 0xab, 0x7d, 0xc5, 0xaa, 0x56,
	0x50, 0x64, 0x3b, 0x44, 0x62, 0x1b, 0x25, 0x2d, 0x55, 0xde, 0x0a, 0x00, 0xd4, 0x05, 0xbd, 0x8f,
	0x75, 0xa3, 0x0f, 0x8a, 0xb5, 0x90, 0x60, 0x49, 0x1e, 0x70, 0xcf, 0x73, 0xb1, 0xe4, 0xa1, 0x51,
	0x56, 0xed, 0x5a, 0xca, 0xc3, 0x52, 0x1e, 0x56, 0x5d, 0xd0, 0x15, 0x16, 0x56, 0xf2, 0xb3, 0x0d,
	0x22, 0x02, 0xce, 0x04, 0x31, 0xba, 0x60, 0xf3, 0xd6, 0xf5, 0xe4, 0x22, 0xf0, 0x24, 0xc3, 0xe4,
	0x17, 0x09, 0xcf, 0xf3, 0x92, 0x69, 0xd8, 0x13, 0x58, 0xbf, 0x21, 0x3d, 0x42, 0xb1, 0x24, 0xc6,
	0x41, 0x46, 0x75, 0x02, 0xc1, 0xd3, 0x1c, 0x50, 0xea, 0xde, 0x07, 0xc5, 0x2a, 0xa1, 0x1e, 0x6b,
	0x10, 0x37, 0x09, 0xc9, 0x3a, 0xbd, 0x15, 0x36, 0xf3, 0xf4, 0x56, 0xd8, 0x34, 0xd2, 0x01, 0xa0,
	0xc9, 0xd2, 0xb4, 0xa3, 0x0c, 0x87, 0x05, 0x06, 0xcf, 0x72, 0x61, 0x69, 0xc6, 0x8b, 0x0e, 0x4a,
	0x35, 0xcc, 0xda, 0xa4, 0xd7, 0x64, 0x0e, 0x67, 0xae, 0xc7, 0x92, 0xad, 0x7b, 0x9c, 0x19, 0x97,
	0x59, 0xdf, 0xfc, 0xaf, 0x2a, 0x78, 0xfd, 0x9f, 0xaa, 0xb4, 0xa3, 0x0e, 0xd8, 0x68, 0x06, 0x2e,
	0x96, 0xe4, 0x0e, 0x87, 0xd8, 0x17, 0xc6, 0x71, 0xd6, 0x86, 0x96, 0x40, 0x88, 0x72, 0x82, 0x49,
	0x12, 0x5c, 0x7b, 0xfe, 0x7e, 0x2f, 0xeb, 0xd5, 0xab, 0xd1, 0x97, 0xa9, 0x8d, 0x26, 0xa6, 0x3e,
	0x9e, 0x98, 0xfa, 0xe7, 0xc4, 0xd4, 0x5f, 0xa7, 0xa6, 0x36, 0x9e, 0x9a, 0xda, 0xc7, 0xd4, 0xd4,
	0x1e, 0xf7, 0xd4, 0xf4, 0x47, 0x36, 0x1a, 0x2c, 0xfd, 0x02, 0xe4, 0x30, 0x20, 0xc2, 0x29, 0xcc,
	0x07, 0xed, 0xe2, 0x27, 0x00, 0x00, 0xff, 0xff, 0x4c, 0x10, 0xb8, 0x5c, 0x23, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgStakingClient is the client API for MsgStaking service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgStakingClient interface {
	// CreateValidator defines a method for creating a new validator.
	CreateValidator(ctx context.Context, in *types.MsgCreateValidator, opts ...grpc.CallOption) (*types.MsgCreateValidatorResponse, error)
	// EditValidator defines a method for editing an existing validator.
	EditValidator(ctx context.Context, in *types.MsgEditValidator, opts ...grpc.CallOption) (*types.MsgEditValidatorResponse, error)
	// Delegate defines a method for performing a delegation of coins
	// from a delegator to a validator.
	Delegate(ctx context.Context, in *types.MsgDelegate, opts ...grpc.CallOption) (*types.MsgDelegateResponse, error)
	// BeginRedelegate defines a method for performing a redelegation
	// of coins from a delegator and source validator to a destination validator.
	BeginRedelegate(ctx context.Context, in *types.MsgBeginRedelegate, opts ...grpc.CallOption) (*types.MsgBeginRedelegateResponse, error)
	// Undelegate defines a method for performing an undelegation from a
	// delegate and a validator.
	Undelegate(ctx context.Context, in *types.MsgUndelegate, opts ...grpc.CallOption) (*types.MsgUndelegateResponse, error)
	// CancelUnbondingDelegation defines a method for performing canceling the unbonding delegation
	// and delegate back to previous validator.
	//
	// Since: cosmos-sdk 0.46
	CancelUnbondingDelegation(ctx context.Context, in *types.MsgCancelUnbondingDelegation, opts ...grpc.CallOption) (*types.MsgCancelUnbondingDelegationResponse, error)
	// UpdateParams defines an operation for updating the x/staking module
	// parameters.
	// Since: cosmos-sdk 0.47
	UpdateParams(ctx context.Context, in *types.MsgUpdateParams, opts ...grpc.CallOption) (*types.MsgUpdateParamsResponse, error)
}

type msgStakingClient struct {
	cc grpc1.ClientConn
}

func NewMsgStakingClient(cc grpc1.ClientConn) MsgStakingClient {
	return &msgStakingClient{cc}
}

func (c *msgStakingClient) CreateValidator(ctx context.Context, in *types.MsgCreateValidator, opts ...grpc.CallOption) (*types.MsgCreateValidatorResponse, error) {
	out := new(types.MsgCreateValidatorResponse)
	err := c.cc.Invoke(ctx, "/mythos.cosmosmod.v1.MsgStaking/CreateValidator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgStakingClient) EditValidator(ctx context.Context, in *types.MsgEditValidator, opts ...grpc.CallOption) (*types.MsgEditValidatorResponse, error) {
	out := new(types.MsgEditValidatorResponse)
	err := c.cc.Invoke(ctx, "/mythos.cosmosmod.v1.MsgStaking/EditValidator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgStakingClient) Delegate(ctx context.Context, in *types.MsgDelegate, opts ...grpc.CallOption) (*types.MsgDelegateResponse, error) {
	out := new(types.MsgDelegateResponse)
	err := c.cc.Invoke(ctx, "/mythos.cosmosmod.v1.MsgStaking/Delegate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgStakingClient) BeginRedelegate(ctx context.Context, in *types.MsgBeginRedelegate, opts ...grpc.CallOption) (*types.MsgBeginRedelegateResponse, error) {
	out := new(types.MsgBeginRedelegateResponse)
	err := c.cc.Invoke(ctx, "/mythos.cosmosmod.v1.MsgStaking/BeginRedelegate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgStakingClient) Undelegate(ctx context.Context, in *types.MsgUndelegate, opts ...grpc.CallOption) (*types.MsgUndelegateResponse, error) {
	out := new(types.MsgUndelegateResponse)
	err := c.cc.Invoke(ctx, "/mythos.cosmosmod.v1.MsgStaking/Undelegate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgStakingClient) CancelUnbondingDelegation(ctx context.Context, in *types.MsgCancelUnbondingDelegation, opts ...grpc.CallOption) (*types.MsgCancelUnbondingDelegationResponse, error) {
	out := new(types.MsgCancelUnbondingDelegationResponse)
	err := c.cc.Invoke(ctx, "/mythos.cosmosmod.v1.MsgStaking/CancelUnbondingDelegation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgStakingClient) UpdateParams(ctx context.Context, in *types.MsgUpdateParams, opts ...grpc.CallOption) (*types.MsgUpdateParamsResponse, error) {
	out := new(types.MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/mythos.cosmosmod.v1.MsgStaking/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgStakingServer is the server API for MsgStaking service.
type MsgStakingServer interface {
	// CreateValidator defines a method for creating a new validator.
	CreateValidator(context.Context, *types.MsgCreateValidator) (*types.MsgCreateValidatorResponse, error)
	// EditValidator defines a method for editing an existing validator.
	EditValidator(context.Context, *types.MsgEditValidator) (*types.MsgEditValidatorResponse, error)
	// Delegate defines a method for performing a delegation of coins
	// from a delegator to a validator.
	Delegate(context.Context, *types.MsgDelegate) (*types.MsgDelegateResponse, error)
	// BeginRedelegate defines a method for performing a redelegation
	// of coins from a delegator and source validator to a destination validator.
	BeginRedelegate(context.Context, *types.MsgBeginRedelegate) (*types.MsgBeginRedelegateResponse, error)
	// Undelegate defines a method for performing an undelegation from a
	// delegate and a validator.
	Undelegate(context.Context, *types.MsgUndelegate) (*types.MsgUndelegateResponse, error)
	// CancelUnbondingDelegation defines a method for performing canceling the unbonding delegation
	// and delegate back to previous validator.
	//
	// Since: cosmos-sdk 0.46
	CancelUnbondingDelegation(context.Context, *types.MsgCancelUnbondingDelegation) (*types.MsgCancelUnbondingDelegationResponse, error)
	// UpdateParams defines an operation for updating the x/staking module
	// parameters.
	// Since: cosmos-sdk 0.47
	UpdateParams(context.Context, *types.MsgUpdateParams) (*types.MsgUpdateParamsResponse, error)
}

// UnimplementedMsgStakingServer can be embedded to have forward compatible implementations.
type UnimplementedMsgStakingServer struct {
}

func (*UnimplementedMsgStakingServer) CreateValidator(ctx context.Context, req *types.MsgCreateValidator) (*types.MsgCreateValidatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateValidator not implemented")
}
func (*UnimplementedMsgStakingServer) EditValidator(ctx context.Context, req *types.MsgEditValidator) (*types.MsgEditValidatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditValidator not implemented")
}
func (*UnimplementedMsgStakingServer) Delegate(ctx context.Context, req *types.MsgDelegate) (*types.MsgDelegateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delegate not implemented")
}
func (*UnimplementedMsgStakingServer) BeginRedelegate(ctx context.Context, req *types.MsgBeginRedelegate) (*types.MsgBeginRedelegateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BeginRedelegate not implemented")
}
func (*UnimplementedMsgStakingServer) Undelegate(ctx context.Context, req *types.MsgUndelegate) (*types.MsgUndelegateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Undelegate not implemented")
}
func (*UnimplementedMsgStakingServer) CancelUnbondingDelegation(ctx context.Context, req *types.MsgCancelUnbondingDelegation) (*types.MsgCancelUnbondingDelegationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelUnbondingDelegation not implemented")
}
func (*UnimplementedMsgStakingServer) UpdateParams(ctx context.Context, req *types.MsgUpdateParams) (*types.MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}

func RegisterMsgStakingServer(s grpc1.Server, srv MsgStakingServer) {
	s.RegisterService(&_MsgStaking_serviceDesc, srv)
}

func _MsgStaking_CreateValidator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.MsgCreateValidator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgStakingServer).CreateValidator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mythos.cosmosmod.v1.MsgStaking/CreateValidator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgStakingServer).CreateValidator(ctx, req.(*types.MsgCreateValidator))
	}
	return interceptor(ctx, in, info, handler)
}

func _MsgStaking_EditValidator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.MsgEditValidator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgStakingServer).EditValidator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mythos.cosmosmod.v1.MsgStaking/EditValidator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgStakingServer).EditValidator(ctx, req.(*types.MsgEditValidator))
	}
	return interceptor(ctx, in, info, handler)
}

func _MsgStaking_Delegate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.MsgDelegate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgStakingServer).Delegate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mythos.cosmosmod.v1.MsgStaking/Delegate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgStakingServer).Delegate(ctx, req.(*types.MsgDelegate))
	}
	return interceptor(ctx, in, info, handler)
}

func _MsgStaking_BeginRedelegate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.MsgBeginRedelegate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgStakingServer).BeginRedelegate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mythos.cosmosmod.v1.MsgStaking/BeginRedelegate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgStakingServer).BeginRedelegate(ctx, req.(*types.MsgBeginRedelegate))
	}
	return interceptor(ctx, in, info, handler)
}

func _MsgStaking_Undelegate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.MsgUndelegate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgStakingServer).Undelegate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mythos.cosmosmod.v1.MsgStaking/Undelegate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgStakingServer).Undelegate(ctx, req.(*types.MsgUndelegate))
	}
	return interceptor(ctx, in, info, handler)
}

func _MsgStaking_CancelUnbondingDelegation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.MsgCancelUnbondingDelegation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgStakingServer).CancelUnbondingDelegation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mythos.cosmosmod.v1.MsgStaking/CancelUnbondingDelegation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgStakingServer).CancelUnbondingDelegation(ctx, req.(*types.MsgCancelUnbondingDelegation))
	}
	return interceptor(ctx, in, info, handler)
}

func _MsgStaking_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgStakingServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mythos.cosmosmod.v1.MsgStaking/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgStakingServer).UpdateParams(ctx, req.(*types.MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _MsgStaking_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mythos.cosmosmod.v1.MsgStaking",
	HandlerType: (*MsgStakingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateValidator",
			Handler:    _MsgStaking_CreateValidator_Handler,
		},
		{
			MethodName: "EditValidator",
			Handler:    _MsgStaking_EditValidator_Handler,
		},
		{
			MethodName: "Delegate",
			Handler:    _MsgStaking_Delegate_Handler,
		},
		{
			MethodName: "BeginRedelegate",
			Handler:    _MsgStaking_BeginRedelegate_Handler,
		},
		{
			MethodName: "Undelegate",
			Handler:    _MsgStaking_Undelegate_Handler,
		},
		{
			MethodName: "CancelUnbondingDelegation",
			Handler:    _MsgStaking_CancelUnbondingDelegation_Handler,
		},
		{
			MethodName: "UpdateParams",
			Handler:    _MsgStaking_UpdateParams_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mythos/cosmosmod/v1/staking_tx.proto",
}
