
(module
  (import "ewasm" "PUSH" (func $PUSH (param i64 i64 i64 i64) ))
(import "ewasm" "MSTORE" (func $MSTORE ))
(import "ewasm" "SSTORE" (func $SSTORE))
(import "ewasm" "CALLVALUE" (func $CALLVALUE))
(import "ewasm" "DUP" (func $DUP (param i32) ))
(import "ewasm" "ISZERO" (func $ISZERO ))
(import "ewasm" "check_overflow" (func $check_overflow (param i64 i64 i64 i64)  (result i32) ))
(import "ewasm" "REVERT" (func $REVERT))
(import "ewasm" "CODECOPY" (func $CODECOPY))
(import "ewasm" "RETURN" (func $RETURN))
(import "ewasm" "CALLDATASIZE" (func $CALLDATASIZE))
(import "ewasm" "LT" (func $LT ))
(import "ewasm" "CALLDATALOAD" (func $CALLDATALOAD))
(import "ewasm" "SHR" (func $SHR ))
(import "ewasm" "EQ" (func $EQ ))
(import "ewasm" "MLOAD" (func $MLOAD ))
(import "ewasm" "SWAP" (func $SWAP (param i32) ))
(import "ewasm" "SUB" (func $SUB ))
(import "ewasm" "ADD" (func $ADD ))
(import "ewasm" "SLOAD" (func $SLOAD))
(import "ewasm" "SLT" (func $SLT ))
(import "ewasm" "GT" (func $GT ))







(import "ewasm" "GLOBAL_GET_SP" (func $GLOBAL_GET_SP (result i32)))
(import "ewasm" "GLOBAL_SET_SP" (func $GLOBAL_SET_SP (param i32)))
(import "ewasm" "ethereum_useGas" (func $useGas (param i64)))

  (type $et12 (func))
  (func $ewasm_ewasm_1 (export "ewasm_ewasm_1") (type $et12) (nop))



  (global $cb_dest (mut i32) (i32.const 0))
  (global $init (mut i32) (i32.const 0))


  ;; TODO: memory should only be 1, but can't resize right now
  (memory 500)
  (export "memory" (memory 0))




  (func $instantiate
    (export "instantiate")
    (local $jump_dest i32) (local $jump_map_switch i32)
    (local.set $jump_dest (i32.const -1))

    (block $done
      (loop $loop
        (block $1
  (block $0
    (if
      (i32.eqz (global.get $init))
      (then
        (global.set $init (i32.const 1))
        (br $0))
      (else
        ;; the callback dest can never be in the first block
        (if (i32.eq (global.get $cb_dest) (i32.const 0))
          (then
            (if (i32.eq (local.get $jump_dest) (i32.const 21))
                (then (br $1))
                (else (unreachable)))
          )
          (else
            ;; return callback destination and zero out $cb_dest
            (local.set $jump_map_switch (global.get $cb_dest))
            (global.set $cb_dest (i32.const 0))
            (br_table $0  $1 (local.get $jump_map_switch))
          )))))(call $useGas (i64.const 34)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32640))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 128))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 64))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $MSTORE)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -64)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 5))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $SSTORE)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -64)))
(call $CALLVALUE)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $ISZERO)
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 21))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))

                    (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 64)))
                    (br_if $loop (i32.eqz (i64.eqz (i64.or
                      (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
                      (i64.or
                        (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 40)))
                        (i64.or
                          (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 48)))
                          (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 56)))
                        )
                      )
                    ))))
(call $useGas (i64.const 6)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32672))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $REVERT) (br $done)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -64)))
)(call $useGas (i64.const 18)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32640))
                 (then (unreachable)))(if (i32.lt_s (call $GLOBAL_GET_SP) (i32.const 0))
                  (then (unreachable)))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 595))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 37))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $CODECOPY)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -96)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $RETURN) (br $done)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -64)))
)))

  (func $main
    (export "main")
    (local $jump_dest i32) (local $jump_map_switch i32)
    (local.set $jump_dest (i32.const -1))

    (block $done
      (loop $loop
        (block $41 (block $40 (block $39 (block $38 (block $37 (block $36 (block $35 (block $34 (block $33 (block $32 (block $31 (block $30 (block $29 (block $28 (block $27 (block $26 (block $25 (block $24 (block $23 (block $22 (block $21 (block $20 (block $19 (block $18 (block $17 (block $16 (block $15 (block $14 (block $13 (block $12 (block $11 (block $10 (block $9 (block $8 (block $7 (block $6 (block $5 (block $4 (block $3 (block $2 (block $1
  (block $0
    (if
      (i32.eqz (global.get $init))
      (then
        (global.set $init (i32.const 1))
        (br $0))
      (else
        ;; the callback dest can never be in the first block
        (if (i32.eq (global.get $cb_dest) (i32.const 0))
          (then
            (if (i32.eq (local.get $jump_dest) (i32.const 538))
                (then (br $41))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 527))
                (then (br $40))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 518))
                (then (br $39))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 513))
                (then (br $38))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 466))
                (then (br $37))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 456))
                (then (br $36))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 445))
                (then (br $35))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 444))
                (then (br $34))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 392))
                (then (br $33))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 381))
                (then (br $32))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 370))
                (then (br $31))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 364))
                (then (br $30))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 343))
                (then (br $29))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 337))
                (then (br $28))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 328))
                (then (br $27))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 319))
                (then (br $26))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 305))
                (then (br $25))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 304))
                (then (br $24))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 283))
                (then (br $23))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 277))
                (then (br $22))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 262))
                (then (br $21))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 257))
                (then (br $20))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 240))
                (then (br $19))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 231))
                (then (br $18))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 221))
                (then (br $17))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 216))
                (then (br $16))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 199))
                (then (br $15))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 190))
                (then (br $14))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 177))
                (then (br $13))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 169))
                (then (br $12))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 160))
                (then (br $11))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 147))
                (then (br $10))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 139))
                (then (br $9))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 137))
                (then (br $8))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 132))
                (then (br $7))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 111))
                (then (br $6))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 102))
                (then (br $5))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 89))
                (then (br $4))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 81))
                (then (br $3))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 76))
                (then (br $2))
                (else (if (i32.eq (local.get $jump_dest) (i32.const 16))
                (then (br $1))
                (else (unreachable)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
          )
          (else
            ;; return callback destination and zero out $cb_dest
            (local.set $jump_map_switch (global.get $cb_dest))
            (global.set $cb_dest (i32.const 0))
            (br_table $0  $1 $2 $3 $4 $5 $6 $7 $8 $9 $10 $11 $12 $13 $14 $15 $16 $17 $18 $19 $20 $21 $22 $23 $24 $25 $26 $27 $28 $29 $30 $31 $32 $33 $34 $35 $36 $37 $38 $39 $40 $41 (local.get $jump_map_switch))
          )))))(call $useGas (i64.const 28)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32640))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 128))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 64))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $MSTORE)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -64)))
(call $CALLVALUE)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $ISZERO)
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 16))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))

                    (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 64)))
                    (br_if $loop (i32.eqz (i64.eqz (i64.or
                      (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
                      (i64.or
                        (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 40)))
                        (i64.or
                          (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 48)))
                          (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 56)))
                        )
                      )
                    ))))
(call $useGas (i64.const 6)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32672))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $REVERT) (br $done)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -64)))
)(call $useGas (i64.const 22)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32672))
                 (then (unreachable)))(if (i32.lt_s (call $GLOBAL_GET_SP) (i32.const 0))
                  (then (unreachable)))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 4))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $CALLDATASIZE)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $LT)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 76))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))

                    (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 64)))
                    (br_if $loop (i32.eqz (i64.eqz (i64.or
                      (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
                      (i64.or
                        (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 40)))
                        (i64.or
                          (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 48)))
                          (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 56)))
                        )
                      )
                    ))))
(call $useGas (i64.const 31)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32608))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $CALLDATALOAD)
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 224))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $SHR)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $DUP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 88873589))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $EQ)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 81))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))

                    (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 64)))
                    (br_if $loop (i32.eqz (i64.eqz (i64.or
                      (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
                      (i64.or
                        (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 40)))
                        (i64.or
                          (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 48)))
                          (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 56)))
                        )
                      )
                    ))))
(call $useGas (i64.const 22)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32640))
                 (then (unreachable)))(call $DUP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 1627277233))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $EQ)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 111))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))

                    (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 64)))
                    (br_if $loop (i32.eqz (i64.eqz (i64.or
                      (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
                      (i64.or
                        (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 40)))
                        (i64.or
                          (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 48)))
                          (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 56)))
                        )
                      )
                    ))))
(call $useGas (i64.const 22)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32640))
                 (then (unreachable)))(call $DUP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 1833756220))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $EQ)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 139))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))

                    (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 64)))
                    (br_if $loop (i32.eqz (i64.eqz (i64.or
                      (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
                      (i64.or
                        (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 40)))
                        (i64.or
                          (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 48)))
                          (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 56)))
                        )
                      )
                    ))))
(call $useGas (i64.const 22)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32640))
                 (then (unreachable)))(call $DUP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 3524758280))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $EQ)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 169))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))

                    (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 64)))
                    (br_if $loop (i32.eqz (i64.eqz (i64.or
                      (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
                      (i64.or
                        (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 40)))
                        (i64.or
                          (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 48)))
                          (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 56)))
                        )
                      )
                    ))))
)(call $useGas (i64.const 7)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32672))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $REVERT) (br $done)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -64)))
)(call $useGas (i64.const 15)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32672))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 89))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 199))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 27)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32640))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 64))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $MLOAD)
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 102))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $SWAP (i32.const 1))
(call $SWAP (i32.const 0))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 343))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 19)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32640))
                 (then (unreachable)))(if (i32.lt_s (call $GLOBAL_GET_SP) (i32.const 0))
                  (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 64))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $MLOAD)
(call $DUP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $SWAP (i32.const 1))
(call $SUB)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $SWAP (i32.const 0))
(call $RETURN) (br $done)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -64)))
)(call $useGas (i64.const 42)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32576))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 137))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 4))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $CALLDATASIZE)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $SUB)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $DUP (i32.const 1))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $ADD)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $SWAP (i32.const 0))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 132))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $SWAP (i32.const 1))
(call $SWAP (i32.const 0))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 283))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 12)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32704))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 221))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 1)) (br $done))(call $useGas (i64.const 15)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32672))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 147))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 231))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 27)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32640))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 64))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $MLOAD)
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 160))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $SWAP (i32.const 1))
(call $SWAP (i32.const 0))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 343))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 19)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32640))
                 (then (unreachable)))(if (i32.lt_s (call $GLOBAL_GET_SP) (i32.const 0))
                  (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 64))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $MLOAD)
(call $DUP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $SWAP (i32.const 1))
(call $SUB)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $SWAP (i32.const 0))
(call $RETURN) (br $done)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -64)))
)(call $useGas (i64.const 15)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32672))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 177))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 240))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 27)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32640))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 64))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $MLOAD)
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 190))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $SWAP (i32.const 1))
(call $SWAP (i32.const 0))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 343))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 19)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32640))
                 (then (unreachable)))(if (i32.lt_s (call $GLOBAL_GET_SP) (i32.const 0))
                  (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 64))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $MLOAD)
(call $DUP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $SWAP (i32.const 1))
(call $SUB)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $SWAP (i32.const 0))
(call $RETURN) (br $done)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -64)))
)(call $useGas (i64.const 30)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32576))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 1))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $SLOAD)
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 216))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $SWAP (i32.const 1))
(call $SWAP (i32.const 0))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 370))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 17)) (if (i32.lt_s (call $GLOBAL_GET_SP) (i32.const 0))
                  (then (unreachable)))(call $SWAP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $SWAP (i32.const 0))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 25)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32640))
                 (then (unreachable)))(if (i32.lt_s (call $GLOBAL_GET_SP) (i32.const 0))
                  (then (unreachable)))(call $DUP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 1))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $SWAP (i32.const 0))
(call $SSTORE)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -64)))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 23)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32640))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $SLOAD)
(call $SWAP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $SWAP (i32.const 0))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 30)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32576))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 2))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $SLOAD)
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 257))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $SWAP (i32.const 1))
(call $SWAP (i32.const 0))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 370))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 17)) (if (i32.lt_s (call $GLOBAL_GET_SP) (i32.const 0))
                  (then (unreachable)))(call $SWAP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $SWAP (i32.const 0))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 29)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32608))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 1))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $CALLDATALOAD)
(call $SWAP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 277))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 1))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 518))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 19)) (if (i32.lt_s (call $GLOBAL_GET_SP) (i32.const 32))
                  (then (unreachable)))(call $SWAP (i32.const 2))
(call $SWAP (i32.const 1))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 35)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32576))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 32))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 2))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 4))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $SUB)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $SLT)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $ISZERO)
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 305))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))

                    (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 64)))
                    (br_if $loop (i32.eqz (i64.eqz (i64.or
                      (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
                      (i64.or
                        (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 40)))
                        (i64.or
                          (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 48)))
                          (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 56)))
                        )
                      )
                    ))))
(call $useGas (i64.const 14)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32672))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 304))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 513))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 1)) )(call $useGas (i64.const 30)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32544))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 319))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 4))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 2))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 5))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $ADD)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 262))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 26)) (if (i32.lt_s (call $GLOBAL_GET_SP) (i32.const 96))
                  (then (unreachable)))(call $SWAP (i32.const 1))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $SWAP (i32.const 2))
(call $SWAP (i32.const 1))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 18)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32640))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 337))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 1))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 456))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 19)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32704))
                 (then (unreachable)))(if (i32.lt_s (call $GLOBAL_GET_SP) (i32.const 64))
                  (then (unreachable)))(call $DUP (i32.const 2))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $MSTORE)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -64)))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 44)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32576))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 32))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 2))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $ADD)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $SWAP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 364))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 3))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $ADD)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $DUP (i32.const 4))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 328))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 19)) (if (i32.lt_s (call $GLOBAL_GET_SP) (i32.const 32))
                  (then (unreachable)))(call $SWAP (i32.const 2))
(call $SWAP (i32.const 1))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 21)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32608))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 381))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 2))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 456))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 23)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32672))
                 (then (unreachable)))(if (i32.lt_s (call $GLOBAL_GET_SP) (i32.const 0))
                  (then (unreachable)))(call $SWAP (i32.const 1))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 392))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 3))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 456))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 37)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32672))
                 (then (unreachable)))(if (i32.lt_s (call $GLOBAL_GET_SP) (i32.const 0))
                  (then (unreachable)))(call $SWAP (i32.const 2))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $DUP (i32.const 2))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const -1)(i64.const -1)(i64.const -1)(i64.const -1))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $SUB)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $DUP (i32.const 2))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $GT)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $ISZERO)
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 445))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))

                    (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 64)))
                    (br_if $loop (i32.eqz (i64.eqz (i64.or
                      (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
                      (i64.or
                        (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 40)))
                        (i64.or
                          (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 48)))
                          (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 56)))
                        )
                      )
                    ))))
(call $useGas (i64.const 14)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32672))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 444))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 466))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 1)) )(call $useGas (i64.const 33)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32640))
                 (then (unreachable)))(if (i32.lt_s (call $GLOBAL_GET_SP) (i32.const 32))
                  (then (unreachable)))(call $DUP (i32.const 2))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 2))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $ADD)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $SWAP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $SWAP (i32.const 2))
(call $SWAP (i32.const 1))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 28)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32672))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 1))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $SWAP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $SWAP (i32.const 1))
(call $SWAP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 25)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32672))
                 (then (unreachable)))(call $PUSH (i64.const 5640894258543067136)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $MSTORE)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -64)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 17))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 4))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $MSTORE)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -64)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 36))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $REVERT) (br $done)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -64)))
)(call $useGas (i64.const 7)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32672))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $REVERT) (br $done)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -64)))
)(call $useGas (i64.const 18)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32640))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 527))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 1))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 456))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))(call $useGas (i64.const 20)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32672))
                 (then (unreachable)))(call $DUP (i32.const 1))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $EQ)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 538))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))

                    (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 64)))
                    (br_if $loop (i32.eqz (i64.eqz (i64.or
                      (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
                      (i64.or
                        (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 40)))
                        (i64.or
                          (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 48)))
                          (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 56)))
                        )
                      )
                    ))))
(call $useGas (i64.const 6)) (if (i32.gt_s (call $GLOBAL_GET_SP) (i32.const 32672))
                 (then (unreachable)))(call $PUSH (i64.const 0)(i64.const 0)(i64.const 0)(i64.const 0))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $DUP (i32.const 0))
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const 32)))
(call $REVERT) (br $done)
(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -64)))
)(call $useGas (i64.const 11)) (if (i32.lt_s (call $GLOBAL_GET_SP) (i32.const 0))
                  (then (unreachable)))(call $GLOBAL_SET_SP (i32.add (call $GLOBAL_GET_SP) (i32.const -32)))
;; jump
                      (local.set $jump_dest (call $check_overflow
                                             (i64.load (call $GLOBAL_GET_SP))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 8)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 16)))
                                             (i64.load (i32.add (call $GLOBAL_GET_SP) (i32.const 24)))))
                      (call $GLOBAL_SET_SP (i32.sub (call $GLOBAL_GET_SP) (i32.const 32)))
                      (br $loop))))


(data (i32.const 33832) "\60\80\60\40\52\60\05\60\00\55\34\80\15\61\00\15\57\60\00\80\fd\5b\50\61\02\53\80\61\00\25\60\00\39\60\00\f3\fe")
(data (i32.const 33869) "\60\80\60\40\52\34\80\15\61\00\10\57\60\00\80\fd\5b\50\60\04\36\10\61\00\4c\57\60\00\35\60\e0\1c\80\63\05\4c\1a\75\14\61\00\51\57\80\63\60\fe\47\b1\14\61\00\6f\57\80\63\6d\4c\e6\3c\14\61\00\8b\57\80\63\d2\17\8b\08\14\61\00\a9\57\5b\60\00\80\fd\5b\61\00\59\61\00\c7\56\5b\60\40\51\61\00\66\91\90\61\01\57\56\5b\60\40\51\80\91\03\90\f3\5b\61\00\89\60\04\80\36\03\81\01\90\61\00\84\91\90\61\01\1b\56\5b\61\00\dd\56\5b\00\5b\61\00\93\61\00\e7\56\5b\60\40\51\61\00\a0\91\90\61\01\57\56\5b\60\40\51\80\91\03\90\f3\5b\61\00\b1\61\00\f0\56\5b\60\40\51\61\00\be\91\90\61\01\57\56\5b\60\40\51\80\91\03\90\f3\5b\60\00\60\01\60\00\54\61\00\d8\91\90\61\01\72\56\5b\90\50\90\56\5b\80\60\00\81\90\55\50\50\56\5b\60\00\80\54\90\50\90\56\5b\60\00\60\02\60\00\54\61\01\01\91\90\61\01\72\56\5b\90\50\90\56\5b\60\00\81\35\90\50\61\01\15\81\61\02\06\56\5b\92\91\50\50\56\5b\60\00\60\20\82\84\03\12\15\61\01\31\57\61\01\30\61\02\01\56\5b\5b\60\00\61\01\3f\84\82\85\01\61\01\06\56\5b\91\50\50\92\91\50\50\56\5b\61\01\51\81\61\01\c8\56\5b\82\52\50\50\56\5b\60\00\60\20\82\01\90\50\61\01\6c\60\00\83\01\84\61\01\48\56\5b\92\91\50\50\56\5b\60\00\61\01\7d\82\61\01\c8\56\5b\91\50\61\01\88\83\61\01\c8\56\5b\92\50\82\7f\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\03\82\11\15\61\01\bd\57\61\01\bc\61\01\d2\56\5b\5b\82\82\01\90\50\92\91\50\50\56\5b\60\00\81\90\50\91\90\50\56\5b\7f\4e\48\7b\71\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\60\00\52\60\11\60\04\52\60\24\60\00\fd\5b\60\00\80\fd\5b\61\02\0f\81\61\01\c8\56\5b\81\14\61\02\1a\57\60\00\80\fd\5b\50\56\fe\a2\64\69\70\66\73\58\22\12\20\be\9a\30\51\70\04\b8\93\1c\7b\0e\83\cf\d2\f9\04\b3\d8\5e\ff\76\e3\b5\7d\39\7a\f6\8c\73\9e\fb\f9\64\73\6f\6c\63\43\00\08\07\00\33")
(func $evm_bytecode (export "evm_bytecode") (result i32 i32 i32)
    i32.const 33832
    i32.const 37
    i32.const 595)


)
