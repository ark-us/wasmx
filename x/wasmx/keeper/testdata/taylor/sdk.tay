(import "json")
(def! store-string (fn* (key value)
    (wasmx-storageStore (string.encode key) (string.encode value))
))
(def! load-string-bz (fn* (key)
    (wasmx-storageLoad (string.encode key))
))
(def! load-string (fn* (key) (string.decode (load-string-bz key))))
(def! store-u256 (fn* (keybz value)
    (wasmx-storageStore keybz (u256.encode value))
))
(def! load-u256 (fn* (keybz) (let* (
        valuebz (wasmx-storageLoad keybz)
    )
        (if (> (buffer.length valuebz) 0)
            (u256.decode valuebz)
            u[0 0 0 0]
        )
)))
(def! revert (fn* (msgstr)
    (wasmx-revert (string-encode msgstr))
))
(def! log-log (fn* (msgstr)
    (console.log (string-encode msgstr))
))
(def! log-info (fn* (msgstr)
    (console.info (string-encode msgstr))
))
(def! log-debug (fn* (msgstr)
    (console.debug (string-encode msgstr))
))
(def! log-error (fn* (msgstr)
    (console.error (string-encode msgstr))
))
(def! addr-humanize (fn* (addrbz)
    (string.decode (wasmx-addr_humanize addrbz))
))
(def! get-caller (fn* ()
    (addr-humanize (wasmx-getCaller))
))
(def! get-address (fn* ()
    (addr-humanize (wasmx-getAddress))
))
(def! get-calldata (fn* ()
    (string.decode (wasmx-getCallData))
))
(def! get-chainId (fn* ()
    (string.decode (wasmx-getChainId))
))
;; returns a list of buffer objects
(def! storageLoadRange (fn* (startkeybz endkeybz reverse)
    (map (fn* (v) (base64.decode v))
        (json-parse (string.decode (wasmx-storageLoadRange (string.encode (json-stringify {"start_key" startkeybz "end_key" endkeybz "reverse" reverse})))))
    )
))

(def! storageLoadRangePairs (fn* (startkeybz endkeybz reverse) (let* (
    buf (wasmx-storageLoadRangePairs (string.encode (json-stringify {"start_key" startkeybz "end_key" endkeybz "reverse" reverse})))
    resp (json-parse (string.decode buf))
    values
)
    (get resp "values") ;; StoragePair[] {key,value}
)))

(def! wasmxlog (fn* (typestr databuf topicsbufarr)
    (wasmx-log (string.encode (json-stringify {
        "type" typestr
        "data" databuf
        "topics" topicsbufarr
    })))
))
